import { DevTools } from '@tbdex/protocol';
const offering = DevTools.createOffering();
export const fakeOfferingsApi = {
    async getOffering() { return offering; },
    async getOfferings() { return [offering]; }
};
export const fakeExchangesApi = {
    exchangeMessagesMap: new Map(),
    getExchanges: function () {
        throw new Error('Function not implemented.');
    },
    getExchange: function (opts) {
        const messages = this.exchangeMessagesMap.get(opts.id) || undefined;
        return Promise.resolve(messages);
    },
    getRfq: function () {
        throw new Error('Function not implemented.');
    },
    getQuote: function () {
        throw new Error('Function not implemented.');
    },
    getOrder: function () {
        throw new Error('Function not implemented.');
    },
    getOrderStatuses: function () {
        throw new Error('Function not implemented.');
    },
    getClose: function () {
        throw new Error('Function not implemented.');
    },
    addMessage: function (message) {
        const messages = this.exchangeMessagesMap.get(message.exchangeId) || [];
        messages.push(message);
        this.exchangeMessagesMap.set(message.exchangeId, messages);
    },
    clearMessages: function () {
        this.exchangeMessagesMap = new Map();
    }
};
//# sourceMappingURL=fakes.js.map