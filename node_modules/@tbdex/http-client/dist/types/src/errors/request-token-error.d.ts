export type RequestTokenErrorParams = {
    message: string;
    cause?: unknown;
};
/**
   * Error thrown for request token related things
   * @beta
   */
export declare class RequestTokenError extends Error {
    constructor(params: RequestTokenErrorParams);
}
/**
   * Error thrown when a request token cannot be signed
   * @beta
   */
export declare class RequestTokenSigningError extends RequestTokenError {
    constructor(params: RequestTokenErrorParams);
}
/**
   * Error thrown when a request token cannot be verified
   * @beta
   */
export declare class RequestTokenVerificationError extends RequestTokenError {
    constructor(params: RequestTokenErrorParams);
}
/**
   * Error thrown when a request token is missing required claims
   * @beta
   */
export declare class RequestTokenMissingClaimsError extends RequestTokenError {
    constructor(params: RequestTokenErrorParams);
}
/**
   * Error thrown when a request token aud does not match the PFI did for which its intended
   * @beta
   */
export declare class RequestTokenAudienceMismatchError extends RequestTokenError {
    constructor(params: RequestTokenErrorParams);
}
//# sourceMappingURL=request-token-error.d.ts.map