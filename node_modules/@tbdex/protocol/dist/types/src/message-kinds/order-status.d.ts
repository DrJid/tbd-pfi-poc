import type { MessageKind, MessageKindModel, MessageMetadata } from '../types.js';
import { Message } from '../message.js';
/**
 * Options passed to {@link OrderStatus.create}
 * @beta
 */
export type CreateOrderStatusOptions = {
    data: MessageKindModel<'orderstatus'>;
    metadata: Omit<MessageMetadata<'orderstatus'>, 'id' | 'kind' | 'createdAt'>;
};
/**
 * Sent by the PFI to Alice to convey the current status of an order. There can be many OrderStatus
 * messages in a given Exchange
 * @beta
 */
export declare class OrderStatus extends Message<'orderstatus'> {
    /** a set of valid Message kinds that can come after an order status */
    readonly validNext: Set<MessageKind>;
    /**
     * Creates an order status with the given options
     * @param opts - options to create an order status
     */
    static create(opts: CreateOrderStatusOptions): OrderStatus;
    /** Current status of Order that's being executed (e.g. PROCESSING, COMPLETED, FAILED etc.) */
    get orderStatus(): string;
}
//# sourceMappingURL=order-status.d.ts.map