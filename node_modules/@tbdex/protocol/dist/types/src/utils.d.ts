import type { MessageKind, MessageModel, ResourceKind, ResourceModel } from './types.js';
import type { ResourceKindClass } from './resource-kinds/index.js';
import type { MessageKindClass } from './message-kinds/index.js';
/**
 * parses a json message into an instance of message kind's class
 * Note: This really should be a part of {@link Message.parse} but can't be because it creates a circular dependency
 * due to each concrete MessageKind class extending Message
 * @param jsonMessage - the message to parse
 */
export declare function messageFactory<T extends MessageKind>(jsonMessage: MessageModel<T>): MessageKindClass;
/**
 * parses a json message into an instance of message kind's class
 * Note: This really should be a part of {@link Resource.parse} but can't be because it creates a circular dependency
 * due to each concrete MessageKind class extending Message
 * @param jsonResource - the resource to parse
 * @returns
 */
export declare function resourceFactory<T extends ResourceKind>(jsonResource: ResourceModel<T>): ResourceKindClass;
//# sourceMappingURL=utils.d.ts.map